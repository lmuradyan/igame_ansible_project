---
- name: Deploy Prometheus, Loki, and Grafana with Docker Compose
  hosts: server2
  become: yes

  vars:
    prometheus_config: /etc/prometheus/prometheus.yml
    docker_compose_file: /etc/docker-compose.yml

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Remove conflicting packages
      apt:
        name: containerd
        state: absent
      ignore_errors: yes

    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Install Docker Compose
      apt:
        name: docker-compose
        state: present

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create Prometheus configuration directory
      file:
        path: /etc/prometheus
        state: directory

    - name: Create directories for data storage
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop:
        - { path: /var/lib/prometheus, owner: '65534', group: '65534', mode: '0755' } # Prometheus runs as nobody (UID 65534)
        - { path: /var/lib/loki, owner: '10001', group: '10001', mode: '0755' } # Loki runs as loki (UID 10001)
        - { path: /var/lib/grafana, owner: '472', group: '472', mode: '0775' } # Grafana runs as grafana (UID 472)

    - name: Set ownership and permissions for Prometheus config directory
      file:
        path: /etc/prometheus
        state: directory
        owner: '65534'
        group: '65534'
        mode: '0755'

    - name: Copy Prometheus configuration file
      template:
        src: templates/prometheus.yml.j2
        dest: "{{ prometheus_config }}"
        owner: '65534'
        group: '65534'
        mode: '0644'

    - name: Copy Docker Compose file
      template:
        src: templates/docker-compose.yml.j2
        dest: "{{ docker_compose_file }}"

    - name: Run Docker Compose up
      shell: docker-compose -f {{ docker_compose_file }} up -d
